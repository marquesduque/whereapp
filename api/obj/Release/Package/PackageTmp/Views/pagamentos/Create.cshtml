@model api.Models.pagamento

@{
    ViewBag.Title = "Create";
}

<section class="content-header">
    <h1>
        <a href="@Url.Action("Index")" class="btn btn-info"><i class="fa fa-angle-left fa-lg" style="margin-right: 10px"></i>Voltar</a>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("index")" base_library="api.Models.pagamento.library_bc_1">Listar</a></li>
        <li class="active" base_library="api.Models.pagamento.library_bc_create">Criar</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)
        <div class="alert alert-danger" role="alert" base_library="api.Models.pagamento.library_error_register">
            Registro não gravado, verificar erro criticado
        </div>

        <fieldset>

            <div class="col-md-12 bar">
                <label class="col-md-6" base_library="api.Models.pagamento.library_title"><i class="fa fa-list-alt" style="margin-right: 10px"></i>Dados Pessoais</label>
            </div>

            <div>


                <div class="form-group col-md-6">
                    <label class="control-label" base_library="api.Models.pagamento.nome">nome</label>

                    <div style="clear: both"></div>
                    @Html.TextBoxFor(model => model.nome, new { placeholder = "", @class = "form-control", maxLength = "150" })
                    @Html.ValidationMessageFor(model => model.nome)
                </div>



                <div class="form-group col-md-6">
                    <label class="control-label" base_library="api.Models.pagamento.external_id">external_id</label>

                    <div style="clear: both"></div>
                    @Html.TextBoxFor(model => model.external_id, new { placeholder = "", @class = "form-control", maxLength = "150" })
                    @Html.ValidationMessageFor(model => model.external_id)
                </div>

                <div class="form-group col-md-6">
                    <div class="info-box bg-aqua">
                        <div class="info-box-icon col-xs-12" style="background-image:@(Model == null || string.IsNullOrEmpty(Model.icone_itype) ? "" : "url(" + Model.icone_itype + "," + Convert.ToBase64String(Model.icone) + ")")">
                            @{
                                if (string.IsNullOrEmpty(Model.icone_itype))
                                {
                                    <i class="fa fa-image"></i>
                                }
                            }
                        </div>
                        <div class="info-box-content">
                            <span>
                                <label class="control-label" base_library="api.Models.produto.icone">Foto do Cartão</label><br />
                                Upload de imagem <i class="fa fa-cloud-upload"></i>
                            </span>
                            <input type="file" source="#icone" size="400" class="upload" />
                            <input type="hidden" id="icone" name="icone" class="upload" value="@(Model == null || string.IsNullOrEmpty(Model.icone_itype) ? "" : Convert.ToBase64String(Model.icone))" />
                            <input type="hidden" id="icone_itype" name="icone_itype" class="upload" value="@Model.icone_itype" />

                        </div><!-- /.info-box-content -->
                    </div><!-- /.info-box -->

                    @Html.ValidationMessageFor(model => model.icone)
                </div>

                <div class="form-group col-md-6">
                    <label class="control-label" base_library="api.Models.pagamento.transacao">Tipo da transação</label>
                    <select class="form-control select2" source="#transacao" data-placeholder="" style="width: 100%;">
                        <option value="null">Selecione um item</option>
                        <option value="1">Dinheiro</option>
                        <option value="2">Cartão de Crédito</option>
                        <option value="3">Cartão de Débito</option>
                        <option value="5">Vale Refeição</option>
                        <option value="4">Online</option>
                    </select>
                    @Html.HiddenFor(model => model.transacao)
                    @Html.ValidationMessageFor(model => model.transacao)
                </div>

                <div class="form-group col-md-6">
                    <label class="control-label" base_library="api.Models.pagamento.grupo_do_pagamento">grupo_do_pagamento</label>
                    <select class="form-control select2" source="#grupo_do_pagamento_id" data-placeholder="" style="width: 100%;">
                        <option value="null">Selecione um item</option>
                        @foreach (var item in new api.Models.db().grupo_do_pagamento.Where(c => c.place_id == api.Models.db.place.place_id))
                {
                            <option value="@item.id">@(item.nome)</option>
                        }
                    </select>
                    @Html.HiddenFor(model => model.grupo_do_pagamento_id)
                    @Html.ValidationMessageFor(model => model.grupo_do_pagamento_id)
                </div>



                <div class="form-group col-md-12 btn-gallery">
                    <a class="btn btn-success pull-right" onclick="$(this).closest('form').submit()" base_library="api.Models.pagamento.library_save"><i class="fa fa-check"></i>Salvar</a>
                </div>
            </div>
        </fieldset>
    }

</section>
