@model api.Models.produto

@{
    ViewBag.Title = "Create";
}

<section class="content-header">
    @{

        <a href="@Url.Action("Index", "produtos", new { tipo_id = Request.QueryString["tipo_id"]})" class="btn btn-warning" base_library="api.Models.filial.varcat"><i class="fa fa-angle-left fa-lg" style="margin-right: 10px"></i>Voltar</a>

    }
</section>
<section class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)


        <fieldset>

            <h1 style="FONT-WEIGHT: 700;">Cadastrar produto</h1>
            <div>Informe abaixo os dados do produto</div>

            <div >

                <div class="form-group col-md-12">
                    <label class="control-label" base_library="api.Models.produto.buscavel">Ativo</label>
                    <div style="height: 34px; line-height: 30px;">
                        <label style="min-width: 45px;">
                            <input type="radio" value="true" name="item_buscavel" class="minimal-green" checked="checked">
                            Sim

                        </label>
                        <label style="min-width: 45px;">
                            <input type="radio" value="false" name="item_buscavel" class="minimal">
                            Não

                        </label>
                        @Html.HiddenFor(model => model.buscavel, new { icheck = "item_buscavel" })
                        @Html.ValidationMessageFor(model => model.buscavel)
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <div class="info-box bg-aqua">
                        <div class="info-box-icon col-xs-12" style="background-image:@(Model == null || string.IsNullOrEmpty(Model.icone_itype) ? "" : "url(" + Model.icone_itype + "," + Convert.ToBase64String(Model.icone) + ")")">
                            @{
                                if (string.IsNullOrEmpty(Model.icone_itype))
                                {
                                    <i class="fa fa-image"></i>
                                }
                            }
                        </div>
                        <div class="info-box-content">
                            <span>
                                <label class="control-label" base_library="api.Models.produto.icone">Foto do Produto</label><br />
                                Upload de imagem <i class="fa fa-cloud-upload"></i>
                            </span>
                            <input type="file" source="#icone" size="400" class="upload" />
                            <input type="hidden" id="icone" name="icone" class="upload" value="@(Model == null || string.IsNullOrEmpty(Model.icone_itype) ? "" : Convert.ToBase64String(Model.icone))" />
                            <input type="hidden" id="icone_itype" name="icone_itype" class="upload" value="@Model.icone_itype" />

                        </div><!-- /.info-box-content -->
                    </div><!-- /.info-box -->

                    @Html.ValidationMessageFor(model => model.icone)
                </div>

                <div class="form-group col-md-9">
                    <label class="control-label" @*base_library="api.Models.produto.name"*@>Nome (*)</label>

                    <div style="clear: both"></div>
                    @Html.TextBoxFor(model => model.nome, new { placeholder = "", @class = "form-control", maxLength = "150" })
                    @Html.ValidationMessageFor(model => model.nome)
                </div>

                <div class="form-group col-md-3">
                    <label class="control-label" base_library="api.Models.produto.preco">Valor</label>

                    <div style="clear: both"></div>
                    @Html.TextBoxFor(model => model.preco, new { placeholder = "", @class = "form-control", maxLength = "150", mask = "money" })
                    @Html.ValidationMessageFor(model => model.preco)
                </div>

                <div class="form-group col-md-12">
                    <label class="control-label" base_library="api.Models.produto.descricao">Descrição</label>

                    <div style="clear: both"></div>
                    @Html.TextAreaFor(model => model.descricao, new { placeholder = "", @class = "form-control", maxLength = "500", rows = "5", cols = "20" })
                    @Html.ValidationMessageFor(model => model.descricao)
                </div>

                <div style="clear:both"></div>
                <div class="alert bg-gray col-md-12" role="alert" style="padding: 20px 8px; margin-top:20px">

                    <div style="padding:0px 20px 20px 20px">

                        <h1 style="FONT-WEIGHT: 700;">Dados adicionais</h1>
                        <div>Informe abaixo os dados adicionais do produto</div>

                    </div>



                    <div class="form-group col-md-6">
                        <label class="control-label" base_library="api.Models.produto.filial_id">
                            Filial
                            <div style="text-transform:uppercase; font-size:10px">Disponivel em quais filiais?</div>
                        </label>
                        <select multiple="multiple" class="form-control select2" source="#filial_produto_list" data-placeholder="" style="width: 100%;">
                            <option value="null">Selecione um item</option>
                            @foreach (var item in new api.Models.db().filial.Where(c => c.place_id == api.Models.db.place.place_id).Select(c => new { id = c.id, endereco = c.endereco }))
                            {
                                <option value="@item.id">@(item.endereco)</option>
                            }
                        </select>
                        @Html.HiddenFor(model => model.filial_produto_list)
                        @Html.ValidationMessageFor(model => model.filial_produto_list)
                    </div>

                    <div class="form-group col-md-6">
                        <label class="control-label" base_library="api.Models.produto.tipo_id">
                            Categoria
                            <div style="text-transform:uppercase; font-size:10px">Filial do produto</div>
                        </label>
                        <select class="form-control select2" source="#tipo_id" data-placeholder="" style="width: 100%;">
                            <option value="null">Selecione um item</option>
                            @foreach (var item in new api.Models.db().tipo.Where(c => c.place_id == api.Models.db.place.place_id && c.ativo == true).Select(c => new { id = c.id, nome = c.nome }))
                            {
                                <option value="@item.id">@(item.nome)</option>
                            }
                        </select>
                        @Html.HiddenFor(model => model.tipo_id)
                        @Html.ValidationMessageFor(model => model.tipo_id)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.codigo">
                            Código Referência
                            <div style="text-transform:uppercase; font-size:10px">Para controle externo</div>
                        </label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.codigo, new { placeholder = "", @class = "form-control", maxLength = "50" })
                        @Html.ValidationMessageFor(model => model.codigo)
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.duracao">
                            Duração
                            <div style="text-transform:uppercase; font-size:10px">tempo de preparo do produto</div>
                        </label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.duracao, new { placeholder = "", @class = "form-control", maxLength = "150", type = "number" })
                        @Html.ValidationMessageFor(model => model.duracao)
                    </div>

                    <div class="form-group col-xs-4">
                        <label class="control-label" base_library="api.Models.produto.destaque">
                            Ordem
                            <div style="text-transform:uppercase; font-size:10px">ordenação no app</div>
                        </label>
                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.destaque, new { placeholder = "", @class = "form-control", maxLength = "150", type = "number", min = "0", value = "0" })
                        @Html.ValidationMessageFor(model => model.destaque)
                    </div>

                    @*SE TIVER CORREIOS, MOSTRA O VALOR DE COMPRA (E A PORCENTAGEM DE LUCRO NA EDIT)*@
                    @if (false)
                    {
                        <div class="form-group col-md-3">
                            <label class="control-label" base_library="api.Models.produto.valorCompra">Custo</label>

                            <div style="clear: both"></div>
                            @Html.TextBoxFor(model => model.valorcompra, new { placeholder = "", @class = "form-control", maxLength = "150", mask = "money" })
                            @Html.ValidationMessageFor(model => model.valorcompra)
                        </div>

                        <div class="form-group col-md-3">
                            <label class="control-label" base_library="api.Models.produto.porcentagemLucro">Porcentagem Lucro (%)</label>

                            <div style="clear: both"></div>
                            @Html.TextBoxFor(model => model.porcentagemlucro, new { placeholder = "", @class = "form-control", maxLength = "150", ReadOnly = "readonly" })
                            @Html.ValidationMessageFor(model => model.porcentagemlucro)
                        </div>


                    }




                    @*SE TIVER VENDEDOR CADASTRADO, MOSTRA O VALOR DE REVENDA (E A COMISSÃO DO VENDEDOR, NO EDIT)*@
                    @if (new api.Models.db().pessoa.Where(c => c.perfil_id == 5 && c.place_id == api.Models.db.place.place_id).Count() > 0)
                    {

                        <div class="form-group col-md-3">
                            <label class="control-label" base_library="api.Models.produto.valorRevenda">Valor de Revenda</label>

                            <div style="clear: both"></div>
                            @Html.TextBoxFor(model => model.valor_revenda, new { placeholder = "", @class = "form-control", maxLength = "150", mask = "money" })
                            @Html.ValidationMessageFor(model => model.valor_revenda)
                        </div>


                        <div class="form-group col-md-3">
                            <label class="control-label" base_library="api.Models.produto.comissaovendedor">Comissão do Vendedor</label>

                            <div style="clear: both"></div>
                            @Html.TextBoxFor(model => model.comissao_vendedor, new { placeholder = "", @class = "form-control", maxLength = "150", mask = "money", ReadOnly = "readonly" })
                            @Html.ValidationMessageFor(model => model.comissao_vendedor)
                        </div>
                    }






                    @*<div class="form-group col-xs-2">
                            <label class="control-label" base_library="api.Models.produto.estoque">Possui estoque?</label>

                            <div style="clear: both"></div>
                            <div class="col-md-12 row" style="line-height: 29px">
                                <label>
                                    <input type="radio" value="true" name="item_estoque" class="minimal-green">
                                    Sim
                                </label>
                                <label>
                                    <input type="radio" value="false" name="item_estoque" class="minimal" checked="checked">
                                    Não
                                </label>
                            </div>
                            <div style="clear: both"></div>
                            @Html.HiddenFor(model => model.bool_estoque, new { icheck = "item_estoque", callback = "visible_estoque" })
                            @Html.ValidationMessageFor(model => model.bool_estoque)
                        </div>*@



                    @*<div class="form-group col-md-3">
                            <label class="control-label" base_library="api.Models.produto.duracao">Duração de Preparo (minutos)</label>

                            <div style="clear: both"></div>
                            @Html.TextBoxFor(model => model.duracao, new { placeholder = "", @class = "form-control", maxLength = "150", type = "number" })
                            @Html.ValidationMessageFor(model => model.duracao)
                        </div>*@



                    <div class="form-group col-xs-3" id="qtde" style="display: none;">
                        <label class="control-label">Quantidade em estoque</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.estoque, new { placeholder = "", @class = "form-control", maxLength = "150", type = "number", min = "0", value = "0" })
                        @Html.ValidationMessageFor(model => model.estoque)
                    </div>

                </div>







                <div style="clear:both"></div>


                @*ESCONDO O COLLAPSE PRA NAO MOSTRAR AS PARADA*@
                @if (false)
                {
                    <div class="box-tools pull-left">
                        <button class="btn btn-box-tool" data-widget="collapse">Avançado<i style="margin-left: 10px" class="fa fa-plus-square"></i></button>
                    </div>

                    <div style="clear:both"></div>


                }



                @*CAIXA QUE FICA OS AVANÇADOS*@
                <div class="box-body" style="display:none">

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.external_id">Altec ID</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.external_id, new { placeholder = "", @class = "form-control", maxLength = "150" })
                        @Html.ValidationMessageFor(model => model.external_id)
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.unidade.external_id">Unidade de Medida</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.unidade, new { placeholder = "", @class = "form-control", maxLength = "150" })
                        @Html.ValidationMessageFor(model => model.unidade)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.peso">Peso</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.peso, new { placeholder = "", @class = "form-control", maxLength = "150", money = "true" })
                        @Html.ValidationMessageFor(model => model.peso)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.comprimento">Comprimento</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.comprimento, new { placeholder = "", @class = "form-control", maxLength = "150", money = "true" })
                        @Html.ValidationMessageFor(model => model.comprimento)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.altura">Altura</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.altura, new { placeholder = "", @class = "form-control", maxLength = "150", money = "true" })
                        @Html.ValidationMessageFor(model => model.altura)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.largura">Largura</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.largura, new { placeholder = "", @class = "form-control", maxLength = "150", money = "true" })
                        @Html.ValidationMessageFor(model => model.largura)
                    </div>


                    <div class="form-group col-md-4">
                        <label class="control-label" base_library="api.Models.produto.diametro">Diâmetro</label>

                        <div style="clear: both"></div>
                        @Html.TextBoxFor(model => model.diametro, new { placeholder = "", @class = "form-control", maxLength = "150", money = "true" })
                        @Html.ValidationMessageFor(model => model.diametro)
                    </div>


                </div>

                <script>
                    function visible_estoque(value) {

                        if (value == "false") {
                            $('#qtde').hide();
                        }
                        else {
                            $('#qtde').show();
                        }
                    }
                </script>



                <div class="form-group col-md-12 btn-gallery">
                    <a base_library="api.Models.produto.library_edit" onclick="$(this).closest('form').submit()" class="btn btn-success pull-right"><i class="fa fa-check"></i>Criar</a>
                </div>
                <div style="clear:both;"></div>
            </div>
        </fieldset>
    }
</section>


@section scripts{
    <script src="~/Scripts/site.js"></script>
}