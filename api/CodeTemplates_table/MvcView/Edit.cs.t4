<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<section class="content-header">
    <h1>
        <a href="@Url.Action("Index")" class="btn btn-warning"><i class="glyphicon glyphicon-chevron-left" style="margin-right: 10px"></i>Voltar</a>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("index")" base_library="<#= ViewDataTypeName #>.library_bc_1">Listar</a></li>
        <li class="active" base_library="<#= ViewDataTypeName #>.library_bc_edit">Editar</li>
    </ol>
</section>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>

<section class="content">
    <div class="col-md-12">
        <div class="alert alert-info col-md-12" role="alert">
            <i class="glyphicon glyphicon-pencil" style="margin-right: 10px"></i><b base_library="<#= ViewDataTypeName #>.library_code">Editando Código:</b> <span class="editid">@Model.id</span>
        </div>
    </div>
    <div style="clear: both"></div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true)
        <div class="alert alert-danger" role="alert" base_library="<#= ViewDataTypeName #>.library_error_register">
            Registro não gravado, verificar erro criticado
        </div>


        <fieldset>
		
            <div class="col-md-12 bar">
                <label class="col-md-6" base_library="<#= ViewDataTypeName #>.library_title"><i class="glyphicon glyphicon-list-alt" style="margin-right: 10px"></i>Dados pessoais</label>
            </div>
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAssociation) {
        if (property.IsPrimaryKey) {
#>
        @Html.HiddenFor(model => model.<#= property.PropertyName #>)

<#
        } else if (!property.IsReadOnly) {
#>

<#
            if (property.IsForeignKey) {
#>
            
<#
            } else {
#>
            
<#
            }
#>
       
<#
            if (property.IsForeignKey) {
#>
                <div class="form-group col-md-6">
					<label class="control-label" base_library="<#= ViewDataTypeName #>.<#= property.PropertyName #>" ><#= property.PropertyName #></label>
					<select class="form-control select2" source="#<#= property.PropertyName #>" data-placeholder="" style="width: 100%;">
                        <option value="null">Selecione um item</option>
						@foreach (var item in new api.Models.db().<#= property.PropertyName.Replace("_id","") #>)
						{
							<option value="@item.id">@item.name</option>
						}
					</select>
					@Html.HiddenFor(model => model.<#= property.PropertyName #>)
					@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
				</div>
<#
            } else {

	if(!property.PropertyName.Contains("_itype")) {
#>
<div class="form-group col-md-6">
				<#
				if(!property.PropertyName.Contains("_itype")) {
				#>
					<label class="control-label" base_library="<#= ViewDataTypeName #>.<#= property.PropertyName #>" ><#= property.PropertyName #></label>
				<#
                }
				#>

				<div style="clear: both"></div>
				<# 
				if(property.TypeName == "System.Int32") {
				#>
					@Html.TextBoxFor(model => model.<#= property.PropertyName #>, new { placeholder = "", @class = "form-control", maxLength = "150", type="number", min="1" })
				<#
				}
				else if(property.TypeName.Contains("System.Byte")) {
				#>
                    <div class="info-box bg-aqua">
                        <span class="info-box-icon" style="background-image:@(Model == null || string.IsNullOrEmpty(Model.<#= property.PropertyName #>_itype) ? "" : "url(" + Model.<#= property.PropertyName #>_itype + "," + Convert.ToBase64String(Model.<#= property.PropertyName #>) + ")")">
                        @{
                            if (Model == null || string.IsNullOrEmpty(Model.<#= property.PropertyName #>_itype))
                            {
                                <i class="fa fa-image"></i>
                            }
                        }
                        </span>
                        <div class="info-box-content">
                            <span>
                                <label class="control-label" base_library="<#= ViewDataTypeName #>.<#= property.PropertyName #>" ><#= property.PropertyName #></label><br />
                                Upload de imagem <i class="fa fa-cloud-upload"></i>
                            </span>
                            <input type="file" source="#<#= property.PropertyName #>" class="upload" />
                            <input type="hidden" id="<#= property.PropertyName #>" name="<#= property.PropertyName #>" value="Model.<#= property.PropertyName #>" class="upload" />
                            <input type="hidden" id="<#= property.PropertyName #>_itype" name="<#= property.PropertyName #>_itype" value="Model.<#= property.PropertyName #>" class="upload" />
                            
                        </div><!-- /.info-box-content -->
                    </div><!-- /.info-box -->
                
				<#
				}
				else if(property.TypeName == "System.DateTime")
                {
				#>
					@Html.TextBoxFor(model => model.<#= property.PropertyName #>, "{0:dd/MM/yyyy}", new { placeholder = "", @class = "form-control", mask = "{\"value\":\"99/99/9999\", \"placeholder\":\"dd/mm/yyyy\"}", maxLength = "10" })
				<#
                }
				else if(property.TypeName == "System.Boolean")
                {#>
					<div class="col-md-12 row" style="line-height: 29px">
						<label>
							<input type="radio" value="true" name="item_<#= property.PropertyName #>" class="minimal-green">
							Sim

						</label>
						<label>
							<input type="radio" value="false" name="item_<#= property.PropertyName #>" class="minimal">
							Não

						</label>
					</div>
					<div style="clear: both"></div>
					@Html.HiddenFor(model => model.<#= property.PropertyName #>, new { icheck = "item_<#= property.PropertyName #>" })
                <#}
				else
				{
				#>
					@Html.TextBoxFor(model => model.<#= property.PropertyName #>, new { placeholder = "", @class = "form-control", maxLength = "150" })
				<#
				}
				#>
                @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
            </div>

<#
            }
        }
#>
         
  

<#
        }
    }
}
#>
        
		
            <div class="form-group col-md-12 btn-gallery">
                <a base_library="<#= ViewDataTypeName #>.library_delete" onclick="delete_item('@(Url.Action("Delete"))?id=@(Model.id)')" class="btn btn-danger"><i class="glyphicon glyphicon-remove"></i>Excluir</a>
                <a base_library="<#= ViewDataTypeName #>.library_edit" onclick="$(this).closest('form').submit()" class="btn btn-success pull-right"><i class="glyphicon glyphicon-pencil"></i>Editar</a>
            </div>

    </fieldset>
}
</section>

<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>